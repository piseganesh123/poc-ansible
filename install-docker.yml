---
- hosts: localhost
  become: true
  vars:
    container_count: 1
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d

  tasks:
#    - name: Install aptitude
#      apt:
#        name: aptitude
#        state: latest
#        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce=5:20.10.11~3-0~ubuntu-focal
        state: present
        update_cache: true

    - name: Add "current" user to "docker" group
      remote_user: ansible_ubuntu_demo
      user:
        name: "ganesh"
        group: "docker"
        append: yes
      tags:
        - docker

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install docker-compose from official github repo
      remote_user: ganesh
      get_url:
        url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

#    - name: Pull default Docker image
#      community.docker.docker_image:
#        name: "{{ default_container_image }}"
#        source: pull

#    - name: Create default containers
#      community.docker.docker_container:
#        name: "{{ default_container_name }}{{ item }}"
#        image: "{{ default_container_image }}"
#        command: "{{ default_container_command }}"
#        state: present
#      with_sequence: count={{ container_count }}

#script to install aws CLI

    - name: Install package dependencies.
      package: name={{ item }} state=present
      with_items:
        - python
        - unzip

    - name: Download the awscli bundle.
#      get_url: url=https://s3.amazonaws.com/aws-cli/awscli-bundle.zip dest=/tmp/awscli-bundle.zip
      get_url: url=https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip dest=/tmp/awscli-bundle.zip
      register: aws_cli_download_bundle

    - name: Unarchive the installer.
      unarchive: src=/tmp/awscli-bundle.zip dest=/tmp copy=no creates=/tmp/awscli-bundle
      when: aws_cli_download_bundle.changed
      register: aws_cli_unarchive_installer

    - name: Install awscli package.
      shell: python /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/bin/aws
      args:
        creates: /usr/bin/aws
      when: aws_cli_unarchive_installer.changed